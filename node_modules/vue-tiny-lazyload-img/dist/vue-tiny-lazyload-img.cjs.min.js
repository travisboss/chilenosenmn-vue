"use strict";var _V_LOADING="v-lazy-loading",_V_LOADED="v-lazy-loaded",_V_ERROR="v-lazy-error",constant={_V_LOADING:_V_LOADING,_V_LOADED:_V_LOADED,_V_ERROR:_V_ERROR},lazyImageObserver=null,clearDataSrc=function(e,r){e.classList.add(r),e.removeAttribute("data-src"),e.removeAttribute("data-err")};"IntersectionObserver"in window&&(lazyImageObserver=new IntersectionObserver(function(e,r){e.forEach(function(e){if(e.isIntersecting){var r=e.target;r.classList.add(constant._V_LOADING);var a=r.dataset.src,t=r.dataset.err,n=new Image;n.src=a,n.onload=function(){r.classList.remove(constant._V_LOADING),a&&(r.src=a,clearDataSrc(r,constant._V_LOADED))},n.onerror=function(){r.classList.remove(constant._V_LOADING),t&&(r.src=t,clearDataSrc(r,constant._V_ERROR))},lazyImageObserver.unobserve(r)}})}));var lazyImageObserver$1=lazyImageObserver,plugin={install:function(e){e.directive("lazyload",{bind:function(e){"IntersectionObserver"in window&&lazyImageObserver$1.observe(e)},componentUpdated:function(e){"IntersectionObserver"in window&&e.classList.contains(constant._V_LOADED)&&lazyImageObserver$1.observe(e)}})}};module.exports=plugin;
//# sourceMappingURL=vue-tiny-lazyload-img.cjs.min.js.map
